@page "/"
@using Wow.Controllers
@using Wow.Models
@using Microsoft.AspNetCore.Components

<PageTitle>WoWch</PageTitle>
<head>
    <link rel="stylesheet" href="~/css/site.css"/>
</head>
<body style="width: 100%; height: 100%">
    <div style="display: flex; flex-direction:row;">
        <div style="width:85%; height:100%;">
            <h2 style="margin-left: 10%">Форум</h2>
            <div>
                <h3>Гайды</h3>
                <ul>
                    <li><a> </a></li>
                </ul>
            </div>
            @foreach(var item in themes)
            {
                <div class="article">
                    <div class="article-header">
                        <a>@item.Creator</a>
                        <p class="article-header-text">@item.Header</p>
                        <span class="comment-timestamp">@item.ReleaseDate.ToString("dd.MM.yyyy HH:mm")</span>
                        @if (AccountController.user!=null && item.Creator.Equals(AccountController.user.Login))
                        {
                            <input type="button" value="Редактировать" @onclick="() => HandleButtonEditClick(item)" />
                        }
                    </div>
                    <div class="article-text">
                        @item.Text
                    </div>
                    <div class="article-footer">
                        <div class="article-rating">
                            <input type="button" @onclick="() => HandleButtonLikeClick(item)" value="Понравилось" />
                            <p>@item.Likes</p>
                        </div>
                        <div class="article-rating">
                            <input type="button" @onclick="() => HandleButtonDislikeClick(item)" value="Не понравилось" />
                            <p>@item.Dislikes</p>
                        </div>                       
                    </div>
                    <div class="article-comments">
                        <div class="comment">
                            
                            @if(item.Comments != null)
                            {
                                @foreach(Comment comment in item.Comments)
                                {
                                    <div class="comment-header">
                                        <span class="comment-author">@comment.Author</span>
                                        <span class="comment-timestamp">@comment.Timestamp.ToString("dd.MM.yyyy HH:mm")</span>
                                    </div>
                                    <div class="comment-body">
                                        <p>@comment.Text</p>
                                    </div>
                                }
                            }
                            <div class="input-comment-container">
                                <form>
                                    <input class="comment-input" type="text" @bind="commentText" placeholder="Введите текст..." />
                                    <input class="comment-submit" type="button" @onclick="() => HandleButtonCommentClick(item)" value="Отправить" />
                                </form>
                            </div>                            
                        </div>
                    </div>
                </div>
            }

        </div>
        <div style="width:15%; height:100%;">
            <p>Статистика сайта</p>
            <div style="border: solid orange 2px">
                <p>кол-во пользователей: @String.Join(" ",MainController.GetAmountOfUsers())</p>
                <p>кол-во статей: @String.Join(" ",MainController.GetAmountOfArticles())</p>
                <p>новый пользователь: </p>
            </div>
        </div>
    </div>
    

</body>

@code{
    private string commentText = string.Empty;
    List<Theme> themes = ThemeController.GetThemes();

    private void HandleButtonLikeClick(Theme theme)
    {
        if(AccountController.user!=null)
            theme.AddLike();
    }

    private void HandleButtonDislikeClick(Theme theme)
    {
        if (AccountController.user != null)
            theme.AddDislike();
    }

    private void HandleButtonEditClick(Theme theme)
    {
        
    }

    private void HandleButtonCommentClick(Theme theme)
    {
        Comment comment = new Comment(AccountController.user.Login, commentText);
        theme.AddCommentToDb(theme ,comment);
        commentText = string.Empty;
    }

}